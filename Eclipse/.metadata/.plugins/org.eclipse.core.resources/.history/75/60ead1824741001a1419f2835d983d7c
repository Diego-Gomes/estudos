package br.com.alura.forum.configuracao.security;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContext;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.filter.OncePerRequestFilter;

public class AutenticacaoUsuarioFilter extends OncePerRequestFilter {

	private TokenService tokenService;
	
	public AutenticacaoUsuarioFilter(TokenService tokenService) {
		this.tokenService = tokenService;
	}

	@Override
	protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
			throws ServletException, IOException {

		String token = recuperaToken(request);
	
		boolean isValido = tokenService.isTokenValido(token);
	
		UsernamePasswordAuthenticationToken authenticatiom = 
				new UsernamePasswordAuthenticationToken(principal, credentials, authorities)
		
		SecurityContextHolder.getContext().setAuthentication(authentication);

		
		filterChain.doFilter(request, response);
	}

	private String recuperaToken(HttpServletRequest request) {

		
		String authorization = request.getHeader("Authorization");
		String prefix = "Bearer ";
		
		if( authorization == null 
				|| authorization.isEmpty() 
				|| !authorization.startsWith(prefix))
			return null;
		
		return authorization.substring(prefix.length());
	}

}
